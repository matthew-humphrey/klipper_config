# Macros related to homing and movement

[gcode_macro MAYBE_HOME]
description: Only home unhomed axis
variable_is_kinematic_position_overriden: False
gcode:
  {% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
    RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
    G28
    SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
  {% else %}
    {% set axes = '' %}
    {% set isHomed = true %}
    {% set axesToHome = '' %}
    {% if params.X is defined %}
      {% set axes = axes ~ 'X ' %}
      {% if 'x' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'X ' %}
      {% endif %}
    {% endif %}
    {% if params.Y is defined %}
      {% set axes = axes ~ 'Y ' %}
      {% if 'y' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Y ' %}
      {% endif %}
    {% endif %}
    {% if params.Z is defined %}
      {% set axes = axes ~ 'Z ' %}
      {% if 'z' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Z ' %}
      {% endif %}
    {% endif %}
    {% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
      {% set axes = '' %}
      {% if 'x' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'X ' %}
      {% endif %}
      {% if 'y' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Y ' %}
      {% endif %}
      {% if 'z' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Z ' %}
      {% endif %}
    {% endif %}
    {% if isHomed is false %}
      M117 Homing {axesToHome}
      RESPOND MSG="Homing {axesToHome}"
      G28 {axesToHome}
    {% else %}
      RESPOND MSG="All requested axes already homed, skipping.."
    {% endif %}
  {% endif %}

[gcode_macro _PARK]
gcode:
  {% set speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
  # Get X position
  {% if params.X != '' %}
    {% if params.X|float >= printer.toolhead.axis_minimum.x + 5 and params.X|float <= printer.toolhead.axis_maximum.x - 5 %}
      {% set safe_x = params.X|float %}
    {% else %}
      {action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
      {% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
    {% endif %}
  {% else %}
    {% set safe_x = printer.toolhead.axis_maximum.x / 2 %}
  {% endif %}
  # Get Y position
  {% if params.LOCATION|default('back')|lower == 'back' %}
    {% set y = printer.toolhead.axis_maximum.y - 5 %}
  {% elif params.LOCATION|lower == 'front' %}
    {% set y = printer.toolhead.axis_minimum.y + 5 %}
  {% elif params.LOCATION|lower == 'center' %}
    {% set y = printer.toolhead.axis_maximum.y / 2 %}
  {% endif %}
  # Absolute positioning
  G90 
  # Park
  G0 X{safe_x} Y{y} F{speed} 

[gcode_macro CENTER_X]
gcode:
    {% set travel_speed = 60 * print["gcode_macro _MACRO_CONFIG"].macro_travel_speed %}
    {% set x_config = printer.configfile.settings['stepper_x'] %}
    {% set x_center = (x_config.position_max + x_config.position_min) / 2 %}
    MAYBE_HOME X=
    G1 X{x_center} F{travel_speed}

[gcode_macro CENTER_Y]
gcode:
    {% set travel_speed = 60 * print["gcode_macro _MACRO_CONFIG"].macro_travel_speed %}
    {% set y_config = printer.configfile.settings['stepper_y'] %}
    {% set y_center = (y_config.position_max + y_config.position_min) / 2 %}
    MAYBE_HOME Y=
    G1 Y{y_center} F{travel_speed}

[gcode_macro CENTER_XY]
gcode:
    {% set travel_speed = 60 * print["gcode_macro _MACRO_CONFIG"].macro_travel_speed %}
    {% set x_config = printer.configfile.settings['stepper_x'] %}
    {% set x_center = (x_config.position_max + x_config.position_min) / 2 %}
    {% set y_config = printer.configfile.settings['stepper_y'] %}
    {% set y_center = (y_config.position_max + y_config.position_min) / 2 %}
    MAYBE_HOME X= Y=
    G1 X{x_center} Y{y_center} F{travel_speed}

[gcode_macro PARK_FOR_LOAD]
gcode:
    {% set travel_speed = 60 * print["gcode_macro _MACRO_CONFIG"].macro_travel_speed %}
    {% set park_z_height = print["gcode_macro _MACRO_CONFIG"].print_park_z_height %}
    {% set x_config = printer.configfile.settings['stepper_x'] %}
    {% set x_center = (x_config.position_max + x_config.position_min) / 2 %}
    {% set y_config = printer.configfile.settings['stepper_y'] %}
    {% set y_center = (y_config.position_max + y_config.position_min) / 2 %}
    MAYBE_HOME X= Y= Z=
    G1 X{x_center} Y{y_center} Z{park_z_height} F{travel_speed}

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description: FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode:
  RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
  SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
  SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro _WAIT_FOR]
gcode:
  {% set MSG = params.MSG|default("Waiting for") %}
  {% set S = params.S|default(0)|int %}
  {% set M = params.M|default(0)|int %}
  {% if M != 0 %}
    {% for t in range(M) %}
      M117 {MSG} {t}/{M}m
      M118 {MSG} {t}/{M}m
      G4 P{60 * 1000}
    {% endfor %}
  {% elif S != 0 %}
    {% for t in range(S) %}
      M117 {MSG} {t}/{S}s
      M118 {MSG} {t}/{S}s
      G4 P{1000}
    {% endfor %}
  {% endif %}
  M117 {MSG} complete

