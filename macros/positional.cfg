# Macros related to homing and movement

[gcode_macro MAYBE_HOME]
description: Only home unhomed axis
variable_is_kinematic_position_overriden: False
gcode:
  {% if printer["gcode_macro MAYBE_HOME"].is_kinematic_position_overriden|lower == 'true' %}
    RESPOND MSG="SET_CENTER_KINEMATIC_POSITION has been abused. Homing all axes. Please refrain from using SET_CENTER_KINEMATIC_POSITION outside of debugging purposes."
    G28
    SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=False
  {% else %}
    {% set axes = '' %}
    {% set isHomed = true %}
    {% set axesToHome = '' %}
    {% if params.X is defined %}
      {% set axes = axes ~ 'X ' %}
      {% if 'x' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'X ' %}
      {% endif %}
    {% endif %}
    {% if params.Y is defined %}
      {% set axes = axes ~ 'Y ' %}
      {% if 'y' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Y ' %}
      {% endif %}
    {% endif %}
    {% if params.Z is defined %}
      {% set axes = axes ~ 'Z ' %}
      {% if 'z' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Z ' %}
      {% endif %}
    {% endif %}
    {% if params.X is not defined and params.Y is not defined and params.Z is not defined %}
      {% set axes = '' %}
      {% if 'x' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'X ' %}
      {% endif %}
      {% if 'y' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Y ' %}
      {% endif %}
      {% if 'z' not in printer.toolhead.homed_axes %}
        {% set isHomed = false %}
        {% set axesToHome = axesToHome ~ 'Z ' %}
      {% endif %}
    {% endif %}
    {% if isHomed is false %}
      SET_DISPLAY_TEXT MSG="Homing {axesToHome}"
      RESPOND MSG="Homing {axesToHome}"
      G28 {axesToHome}
      M400
    {% else %}
      #RESPOND MSG="All requested axes already homed, skipping.."
    {% endif %}
  {% endif %}

[gcode_macro _PARK]
gcode:
  {% set speed = printer["gcode_macro _MACRO_CONFIG"].macro_travel_speed|float * 60 %}
  {% set X = params.X|default(-1.0)|float %}
  {% if X >= 0 %}
    {% if X >= printer.toolhead.axis_minimum.x and X <= printer.toolhead.axis_maximum.x %}
      {% set safe_x = X %}
    {% else %}
      {action_respond_info('The requested X co-ordinate is outside the defined axis bounds - using defaults')}
      {% set safe_x = (printer.toolhead.axis_minimum.x + printer.toolhead.axis_maximum.x) / 2 %}
    {% endif %}
  {% else %}
    {% set safe_x = (printer.toolhead.axis_minimum.x + printer.toolhead.axis_maximum.x) / 2 %}
  {% endif %}
  # Get Y position
  {% if params.LOCATION|default('back')|lower == 'back' %}
    {% set y = printer.toolhead.axis_maximum.y - 5 %}
  {% elif params.LOCATION|lower == 'front' %}
    {% set y = printer.toolhead.axis_minimum.y + 5 %}
  {% elif params.LOCATION|lower == 'center' %}
    {% set y = printer.toolhead.axis_maximum.y / 2 %}
  {% endif %}
  # Absolute positioning
  G90 
  # Park
  G0 X{safe_x} Y{y} F{speed} 

[gcode_macro CENTER_X]
gcode:
    {% set travel_speed = 60 * printer["gcode_macro _MACRO_CONFIG"].macro_travel_speed %}
    {% set x_center = (printer.toolhead.axis_maximum.x + printer.toolhead.axis_minimum.x) / 2 %}
    MAYBE_HOME
    G1 X{x_center} F{travel_speed}

[gcode_macro CENTER_Y]
gcode:
    {% set travel_speed = 60 * printer["gcode_macro _MACRO_CONFIG"].macro_travel_speed %}
    {% set y_center = (printer.toolhead.axis_maximum.y  + printer.toolhead.axis_minimum.y) / 2 %}
    MAYBE_HOME
    G1 Y{y_center} F{travel_speed}

[gcode_macro CENTER_XY]
gcode:
    {% set travel_speed = 60 * printer["gcode_macro _MACRO_CONFIG"].macro_travel_speed %}
    # printer.configfile.settings.stepper_x.position_max printer.configfile.settings.stepper_x.position_min
    {% set x_center = (printer.toolhead.axis_maximum.x + printer.toolhead.axis_minimum.x) / 2 %}    
    RESPOND MSG="axis_maximum.x = {printer.toolhead.axis_maximum.x} axis_minimum.x = {printer.toolhead.axis_minimum.x} x_center = {x_center}"
    {% set y_center = (printer.toolhead.axis_maximum.y  + printer.toolhead.axis_minimum.y) / 2 %}
    MAYBE_HOME
    G1 X{x_center} Y{y_center} F{travel_speed}

[gcode_macro CENTER_XY_Z50]
gcode:
    {% set travel_speed = 60 * printer["gcode_macro _MACRO_CONFIG"].macro_travel_speed %}
    # printer.configfile.settings.stepper_x.position_max printer.configfile.settings.stepper_x.position_min
    {% set x_center = (printer.toolhead.axis_maximum.x + printer.toolhead.axis_minimum.x) / 2 %}    
    RESPOND MSG="axis_maximum.x = {printer.toolhead.axis_maximum.x} axis_minimum.x = {printer.toolhead.axis_minimum.x} x_center = {x_center}"
    {% set y_center = (printer.toolhead.axis_maximum.y  + printer.toolhead.axis_minimum.y) / 2 %}
    MAYBE_HOME
    G1 X{x_center} Y{y_center} F{travel_speed}
    G1 Z50

[gcode_macro CENTER_PROBE_XY]
gcode:
  {% set has_probe = printer.configfile.settings["probe"] is defined %}
  {% if not has_probe %}
    { action_raise_error("Probe dock failed!") }
  {% endif %}
  {% set travel_speed = 60 * printer["gcode_macro _MACRO_CONFIG"].macro_travel_speed %}
  {% set probe_config = printer.configfile.settings['probe'] %}
  {% set x_center = (printer.toolhead.axis_maximum.x + printer.toolhead.axis_minimum.x) / 2 - probe_config.x_offset %}
  {% set y_center = (printer.toolhead.axis_maximum.y  + printer.toolhead.axis_minimum.y) / 2 - probe_config.y_offset %}
  MAYBE_HOME
  G1 X{x_center} Y{y_center} F{travel_speed}

[gcode_macro PARK_FOR_LOAD]
gcode:
  {% set location = printer["gcode_macro _MACRO_CONFIG"].load_park_in|default('center')|lower %}
  {% set travel_speed = 60 * printer["gcode_macro _MACRO_CONFIG"].macro_travel_speed %}
  {% set park_z_height = printer["gcode_macro _MACRO_CONFIG"].load_park_z_height %}
  {% set x = printer["gcode_macro _MACRO_CONFIG"].load_park_x %}
  {% set ycenter = (printer.toolhead.axis_maximum.y + printer.toolhead.axis_minimum.y) / 2 %}
  {% if location == 'back' %}
    {% set y = printer.toolhead.axis_maximum.y - 5 %}
  {% elif location == 'front' %}
    {% set y = printer.toolhead.axis_minimum.y + 5 %}
  {% else %}
    {% set y = ycenter %}
  {% endif %}
  MAYBE_HOME
  G1 X{x} Y{y} Z{park_z_height} F{travel_speed}

[gcode_macro SET_CENTER_KINEMATIC_POSITION]
description: FOR DEBUGGING PURPOSES ONLY. Sets the internal printer kinematic state to the center of all axes regardless of actual physical position.
gcode:
  RESPOND MSG="WARNING: ONLY USE SET_CENTER_KINEMATIC_POSITION FOR DEBUGGING PURPOSES. YOU'RE OVERRIDING THE INTERNAL POSITIONING STATE OF THE PRINTER. PROCEED WITH CAUTION AND DO A PROPER G28 WHEN DONE."
  SET_GCODE_VARIABLE MACRO=MAYBE_HOME VARIABLE=is_kinematic_position_overriden VALUE=True
  SET_KINEMATIC_POSITION X={printer.toolhead.axis_maximum.x / 2} Y={printer.toolhead.axis_maximum.y / 2} Z={printer.toolhead.axis_maximum.z / 2}

[gcode_macro _WAIT_FOR]
gcode:
  {% set MSG = params.MSG|default("Waiting for") %}
  {% set S = params.S|default(0)|int %}
  {% set M = params.M|default(0)|int %}
  {% if M != 0 %}
    {% for t in range(M) %}
      SET_DISPLAY_TEXT MSG="{MSG} {t}/{M}m"
      RESPOND MSG="{MSG} {t}/{M}m"
      G4 P{60 * 1000}
    {% endfor %}
  {% elif S != 0 %}
    {% for t in range(S) %}
      SET_DISPLAY_TEXT MSG="{MSG} {t}/{S}s"
      RESPOND MSG="{MSG} {t}/{S}s"
      G4 P{1000}
    {% endfor %}
  {% endif %}
  SET_DISPLAY_TEXT MSG="{MSG} complete"

